#!/bin/bash

echo "================================================"
echo "üßπ CLEANUP - D·ªåN D·∫∏P PROJECT"
echo "================================================"
echo ""

# Function ƒë·ªÉ x√°c nh·∫≠n
confirm() {
    read -p "$1 (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        return 0
    else
        return 1
    fi
}

# D·ªçn d·∫πp target directory
cleanup_target() {
    echo "üóÇÔ∏è  D·ªçn d·∫πp th∆∞ m·ª•c target..."
    
    # Spring Boot complete
    if [ -d "../../gs-serving-web-content-main/complete/target" ]; then
        if confirm "X√≥a ../../gs-serving-web-content-main/complete/target?"; then
            rm -rf ../../gs-serving-web-content-main/complete/target
            echo "‚úÖ ƒê√£ x√≥a complete/target"
        fi
    fi
    
    # Spring Boot initial
    if [ -d "../../gs-serving-web-content-main/initial/target" ]; then
        if confirm "X√≥a ../../gs-serving-web-content-main/initial/target?"; then
            rm -rf ../../gs-serving-web-content-main/initial/target
            echo "‚úÖ ƒê√£ x√≥a initial/target"
        fi
    fi
}

# D·ªçn d·∫πp class files
cleanup_class_files() {
    echo "üìù D·ªçn d·∫πp c√°c file .class..."
    
    if confirm "X√≥a t·∫•t c·∫£ file .class trong ../../QuanLy/?"; then
        find ../../QuanLy/ -name "*.class" -type f -delete 2>/dev/null
        echo "‚úÖ ƒê√£ x√≥a c√°c file .class trong QuanLy/"
    fi
    
    if confirm "X√≥a t·∫•t c·∫£ file .class trong ../../test/?"; then
        find ../../test/ -name "*.class" -type f -delete 2>/dev/null
        echo "‚úÖ ƒê√£ x√≥a c√°c file .class trong test/"
    fi
}

# D·ªçn d·∫πp logs
cleanup_logs() {
    echo "üìã D·ªçn d·∫πp log files..."
    
    if confirm "X√≥a c√°c file log (*.log)?"; then
        find . -name "*.log" -type f -delete 2>/dev/null
        echo "‚úÖ ƒê√£ x√≥a c√°c file log"
    fi
}

# D·ªçn d·∫πp temporary files
cleanup_temp() {
    echo "üóÑÔ∏è  D·ªçn d·∫πp temporary files..."
    
    if confirm "X√≥a c√°c file t·∫°m (*.tmp, *~, .DS_Store)?"; then
        find . -name "*.tmp" -type f -delete 2>/dev/null
        find . -name "*~" -type f -delete 2>/dev/null
        find . -name ".DS_Store" -type f -delete 2>/dev/null
        echo "‚úÖ ƒê√£ x√≥a c√°c file t·∫°m"
    fi
}

# D·ªçn d·∫πp Maven cache local
cleanup_maven_cache() {
    echo "üì¶ D·ªçn d·∫πp Maven cache..."
    
    if confirm "X√≥a Maven local repository cache (.m2/repository)?"; then
        if [ -d "$HOME/.m2/repository" ]; then
            rm -rf "$HOME/.m2/repository"
            echo "‚úÖ ƒê√£ x√≥a Maven cache"
        else
            echo "‚ÑπÔ∏è  Maven cache kh√¥ng t·ªìn t·∫°i"
        fi
    fi
}

# Menu ch√≠nh
main_menu() {
    echo "Ch·ªçn lo·∫°i cleanup:"
    echo "1. D·ªçn d·∫πp target directories"
    echo "2. D·ªçn d·∫πp class files"
    echo "3. D·ªçn d·∫πp log files"
    echo "4. D·ªçn d·∫πp temporary files"
    echo "5. D·ªçn d·∫πp Maven cache"
    echo "6. D·ªçn d·∫πp t·∫•t c·∫£"
    echo "0. Tho√°t"
    echo ""
    
    read -p "Nh·∫≠p l·ª±a ch·ªçn (0-6): " choice
    
    case $choice in
        1) cleanup_target ;;
        2) cleanup_class_files ;;
        3) cleanup_logs ;;
        4) cleanup_temp ;;
        5) cleanup_maven_cache ;;
        6) 
            cleanup_target
            cleanup_class_files
            cleanup_logs
            cleanup_temp
            ;;
        0) 
            echo "üëã Tho√°t cleanup"
            exit 0
            ;;
        *) 
            echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá"
            main_menu
            ;;
    esac
}

# Ch·∫°y menu ch√≠nh
main_menu

echo ""
echo "‚ú® Cleanup ho√†n t·∫•t!"
echo ""
