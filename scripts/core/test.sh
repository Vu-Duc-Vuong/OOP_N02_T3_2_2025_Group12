#!/bin/bash

echo "================================================"
echo "üß™ TEST - CH·∫†Y TESTS"
echo "================================================"
echo ""

# Function ki·ªÉm tra Java
check_java() {
    echo "‚òï Ki·ªÉm tra Java..."
    if java -version >/dev/null 2>&1; then
        echo "‚úÖ Java ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t"
    else
        echo "‚ùå Java kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y"
        echo "üí° Vui l√≤ng c√†i ƒë·∫∑t Java 11+ v√† th√™m v√†o PATH"
        exit 1
    fi
}

# Build tr∆∞·ªõc khi test
ensure_built() {
    echo "üîß ƒê·∫£m b·∫£o project ƒë√£ ƒë∆∞·ª£c build..."
    
    # Check if QuanLy classes exist
    if [ ! -f "../../QuanLy/src/Model/HangHoa.class" ]; then
        echo "‚ö†Ô∏è  QuanLy ch∆∞a ƒë∆∞·ª£c build, ƒëang build..."
        cd ../../QuanLy/src
        javac Model/*.java
        javac -cp . *.java
        cd - > /dev/null
    fi
    
    # Check if test classes exist
    if [ ! -f "../../test/TestMain.class" ]; then
        echo "‚ö†Ô∏è  Test files ch∆∞a ƒë∆∞·ª£c build, ƒëang build..."
        cd ../../test
        javac -cp .:../QuanLy/src *.java
        cd - > /dev/null
    fi
}

# Ch·∫°y Spring Boot tests
run_spring_boot_tests() {
    echo ""
    echo "üß™ Ch·∫°y Spring Boot Tests..."
    echo "============================"
    
    cd ../../gs-serving-web-content-main/complete
    
    if [ ! -f "pom.xml" ]; then
        echo "‚ùå Kh√¥ng t√¨m th·∫•y pom.xml"
        cd - > /dev/null
        return 1
    fi
    
    echo "üìÅ Th∆∞ m·ª•c hi·ªán t·∫°i: $(pwd)"
    chmod +x mvnw
    
    echo "üîç Ch·∫°y unit tests..."
    ./mvnw test
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Spring Boot tests passed!"
    else
        echo "‚ùå Spring Boot tests failed!"
        cd - > /dev/null
        return 1
    fi
    
    cd - > /dev/null
    return 0
}

# Ch·∫°y QuanLy tests
run_quan_ly_tests() {
    echo ""
    echo "üß™ Ch·∫°y QuanLy Tests..."
    echo "======================"
    
    cd ../../test
    echo "üìÅ Th∆∞ m·ª•c hi·ªán t·∫°i: $(pwd)"
    
    local test_results=0
    
    # Test TestMain
    if [ -f "TestMain.class" ]; then
        echo ""
        echo "‚ñ∂Ô∏è  Ch·∫°y TestMain..."
        echo "-------------------"
        java -cp .:../QuanLy/src TestMain
        if [ $? -eq 0 ]; then
            echo "‚úÖ TestMain passed"
        else
            echo "‚ùå TestMain failed"
            test_results=1
        fi
    fi
    
    # Test TestPhuongThuc1
    if [ -f "TestPhuongThuc1.class" ]; then
        echo ""
        echo "‚ñ∂Ô∏è  Ch·∫°y TestPhuongThuc1..."
        echo "--------------------------"
        java -cp .:../QuanLy/src TestPhuongThuc1
        if [ $? -eq 0 ]; then
            echo "‚úÖ TestPhuongThuc1 passed"
        else
            echo "‚ùå TestPhuongThuc1 failed"
            test_results=1
        fi
    fi
    
    # Test TestQuanLyHangHoa
    if [ -f "TestQuanLyHangHoa.class" ]; then
        echo ""
        echo "‚ñ∂Ô∏è  Ch·∫°y TestQuanLyHangHoa..."
        echo "----------------------------"
        java -cp .:../QuanLy/src TestQuanLyHangHoa
        if [ $? -eq 0 ]; then
            echo "‚úÖ TestQuanLyHangHoa passed"
        else
            echo "‚ùå TestQuanLyHangHoa failed"
            test_results=1
        fi
    fi
    
    # Test TestTinhTongNhapTheoNgay
    if [ -f "TestTinhTongNhapTheoNgay.class" ]; then
        echo ""
        echo "‚ñ∂Ô∏è  Ch·∫°y TestTinhTongNhapTheoNgay..."
        echo "----------------------------------"
        java -cp .:../QuanLy/src TestTinhTongNhapTheoNgay
        if [ $? -eq 0 ]; then
            echo "‚úÖ TestTinhTongNhapTheoNgay passed"
        else
            echo "‚ùå TestTinhTongNhapTheoNgay failed"
            test_results=1
        fi
    fi
    
    cd - > /dev/null
    return $test_results
}

# Test coverage report
show_test_coverage() {
    echo ""
    echo "üìä TEST COVERAGE REPORT"
    echo "======================="
    echo ""
    
    # Count test files
    local total_tests=0
    local java_tests=0
    
    if [ -d "test" ]; then
        total_tests=$(find test -name "Test*.java" | wc -l)
        java_tests=$(find test -name "Test*.class" | wc -l)
    fi
    
    echo "üìù T·ªïng s·ªë test files: $total_tests"
    echo "‚úÖ Test files ƒë√£ build: $java_tests"
    
    # Spring Boot test info
    if [ -d "gs-serving-web-content-main/complete/src/test" ]; then
        local spring_tests=$(find gs-serving-web-content-main/complete/src/test -name "*.java" | wc -l)
        echo "üå± Spring Boot test files: $spring_tests"
    fi
    
    echo ""
    echo "üìã Danh s√°ch test files:"
    echo "------------------------"
    if [ -d "test" ]; then
        ls -la test/Test*.java 2>/dev/null | awk '{print "  " $9}' || echo "  Kh√¥ng c√≥ test files"
    fi
}

# Quick test - ch·ªâ ch·∫°y tests c∆° b·∫£n
run_quick_tests() {
    echo "‚ö° Quick Test Mode..."
    echo "Ch·ªâ ch·∫°y c√°c tests c∆° b·∫£n v√† nhanh"
    echo ""
    
    ensure_built
    
    cd ../../test
    
    # Ch·ªâ ch·∫°y TestMain v√† TestPhuongThuc1
    if [ -f "TestMain.class" ]; then
        echo "‚ñ∂Ô∏è  Quick Test: TestMain"
        java -cp .:../QuanLy/src TestMain
    fi
    
    if [ -f "TestPhuongThuc1.class" ]; then
        echo "‚ñ∂Ô∏è  Quick Test: TestPhuongThuc1"
        java -cp .:../QuanLy/src TestPhuongThuc1
    fi
    
    cd - > /dev/null
    echo "‚ö° Quick tests ho√†n t·∫•t!"
}

# Menu ch√≠nh
main_menu() {
    echo "Ch·ªçn lo·∫°i test:"
    echo "1. Ch·∫°y Spring Boot tests"
    echo "2. Ch·∫°y QuanLy tests"
    echo "3. Ch·∫°y t·∫•t c·∫£ tests"
    echo "4. Quick test (tests c∆° b·∫£n)"
    echo "5. Hi·ªÉn th·ªã test coverage"
    echo "0. Tho√°t"
    echo ""
    
    read -p "Nh·∫≠p l·ª±a ch·ªçn (0-5): " choice
    
    case $choice in
        1) 
            check_java
            run_spring_boot_tests
            ;;
        2) 
            check_java
            ensure_built
            run_quan_ly_tests
            ;;
        3) 
            check_java
            ensure_built
            local spring_result=0
            local quanly_result=0
            
            run_spring_boot_tests
            spring_result=$?
            
            run_quan_ly_tests
            quanly_result=$?
            
            echo ""
            echo "üìä T·ªîNG K·∫æT:"
            echo "============"
            if [ $spring_result -eq 0 ]; then
                echo "‚úÖ Spring Boot tests: PASSED"
            else
                echo "‚ùå Spring Boot tests: FAILED"
            fi
            
            if [ $quanly_result -eq 0 ]; then
                echo "‚úÖ QuanLy tests: PASSED"
            else
                echo "‚ùå QuanLy tests: FAILED"
            fi
            ;;
        4) 
            check_java
            run_quick_tests
            ;;
        5) 
            show_test_coverage
            ;;
        0) 
            echo "üëã Tho√°t test"
            exit 0
            ;;
        *) 
            echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá"
            main_menu
            ;;
    esac
}

# N·∫øu c√≥ tham s·ªë, ch·∫°y tr·ª±c ti·∫øp
if [ $# -gt 0 ]; then
    check_java
    case $1 in
        "spring"|"springboot") run_spring_boot_tests ;;
        "quanly") 
            ensure_built
            run_quan_ly_tests 
            ;;
        "all") 
            ensure_built
            run_spring_boot_tests
            run_quan_ly_tests
            ;;
        "quick") run_quick_tests ;;
        "coverage") show_test_coverage ;;
        *) 
            echo "‚ùå Tham s·ªë kh√¥ng h·ª£p l·ªá: $1"
            echo "S·ª≠ d·ª•ng: ./test.sh [spring|quanly|all|quick|coverage]"
            ;;
    esac
else
    main_menu
fi

echo ""
echo "‚ú® Test process ho√†n t·∫•t!"
